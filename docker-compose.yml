version: "2.4"
services:

  configuration-service:
    ports:
      - "8088:8088"
    build:
      context: ./configurationService
      dockerfile: docker/Dockerfile
      target: run
    healthcheck:
      test: curl http://configuration-service:8088 || echo 1
      interval: 10s
      timeout: 10s
      retries: 5
    environment:
      - SPRING_CLOUD_CONFIG_GIT_URL=${SPRING_CLOUD_CONFIG_GIT_URL}
      - SPRING_CLOUD_CONFIG_GIT_USERNAME=${SPRING_CLOUD_CONFIG_GIT_USERNAME}
      - SPRING_CLOUD_CONFIG_GIT_PASSWORD=${SPRING_CLOUD_CONFIG_GIT_PASSWORD}
      - SPRING_CLOUD_CONFIG_ENCRYPTION_KEY=${SPRING_CLOUD_CONFIG_ENCRYPTION_KEY}
      - SPRING_CLOUD_EUREKA_URL=${SPRING_CLOUD_EUREKA_URL}

  discovery-service:
    ports:
      - "8761:8761"
    build:
      context: ./discoveryService
      dockerfile: docker/Dockerfile
      target: run
    depends_on:
      configuration-service:
        condition: service_healthy
    environment:
      - SPRING_CLOUD_CONFIG_URL=${SPRING_CLOUD_CONFIG_URL}
      - SPRING_CLOUD_EUREKA_URL=${SPRING_CLOUD_EUREKA_URL}

  gateway-service:
    ports:
      - "8887:8887"
    build:
      context: ./gatewayService
      dockerfile: docker/Dockerfile
      target: run
    depends_on:
      configuration-service:
        condition: service_healthy
    environment:
      - SPRING_CLOUD_CONFIG_URL=${SPRING_CLOUD_CONFIG_URL}
      - SPRING_CLOUD_EUREKA_URL=${SPRING_CLOUD_EUREKA_URL}

  authorization-service:
    ports:
      - "8888:8888"
    build:
      context: ./authorizationService
      dockerfile: docker/Dockerfile
      target: run
    depends_on:
      configuration-service:
        condition: service_healthy
      auth-redis:
        condition: service_healthy
    environment:
      - SPRING_CLOUD_CONFIG_URL=${SPRING_CLOUD_CONFIG_URL}
      - SPRING_CLOUD_EUREKA_URL=${SPRING_CLOUD_EUREKA_URL}
      - JWT_PRIVATE_KEY=${AUTH_SERVICE_PRIVATE_KEY}
      - JWT_PUBLIC_KEY=${AUTH_SERVICE_PUBLIC_KEY}
      - REDIS_HOST=${AUTH_SERVICE_REDIS_HOST}
      - REDIS_PORT=${AUTH_SERVICE_REDIS_PORT}
      - REDIS_PASSWORD=${AUTH_SERVICE_REDIS_PASSWORD}

  auth-redis:
    ports:
      - "5001:6379"
    image: redis:5.0.6
    command: redis-server --requirepass ${AUTH_SERVICE_REDIS_PASSWORD}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -h auth-redis -p 6379 -a ${AUTH_SERVICE_REDIS_PASSWORD} --no-auth-warning ping"]
      interval: 10s
      timeout: 10s
      retries: 5

  user-postgres:
    ports:
      - "5000:5432"
    image: postgres:11.5
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USER_SERVICE_POSTGRES_USER} -d ${USER_SERVICE_POSTGRES_DB} -h user-postgres -p 5432"]
      interval: 10s
      timeout: 10s
      retries: 5
    environment:
      - POSTGRES_PASSWORD=${USER_SERVICE_POSTGRES_PASSWORD}
      - POSTGRES_USER=${USER_SERVICE_POSTGRES_USER}
      - POSTGRES_DB=${USER_SERVICE_POSTGRES_DB}

  user-service:
    ports:
      - "8889:8889"
    build:
      context: ./userService
      dockerfile: docker/Dockerfile
      target: run
    depends_on:
      configuration-service:
        condition: service_healthy
      user-postgres:
        condition: service_healthy
    environment:
      - SPRING_CLOUD_CONFIG_URL=${SPRING_CLOUD_CONFIG_URL}
      - SPRING_CLOUD_EUREKA_URL=${SPRING_CLOUD_EUREKA_URL}
      - POSTGRES_CONNECTION_URL=${USER_SERVICE_POSTGRES_CONNECTION_URL}
      - POSTGRES_USER=${USER_SERVICE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${USER_SERVICE_POSTGRES_PASSWORD}

  permissions-service:
    ports:
      - "8890:8890"
    build:
      context: ./permissionsService
      dockerfile: docker/Dockerfile
      target: run
    depends_on:
      configuration-service:
        condition: service_healthy
    environment:
      - SPRING_CLOUD_CONFIG_URL=${SPRING_CLOUD_CONFIG_URL}
      - SPRING_CLOUD_EUREKA_URL=${SPRING_CLOUD_EUREKA_URL}