version: "2.4"

services:

  configuration-service:
    expose:
      - "8088"
    image: mamba4ka/savepasswords:configurationService-latest
    restart: always
    networks:
      - back

  discovery-service:
    expose:
      - "8761"
    image: mamba4ka/savepasswords:discoveryService-latest
    restart: always
    environment:
      - LOGZIO_TOKEN=${LOGZIO_TOKEN}
    networks:
      - back

  gateway-service:
    expose:
      - "8887"
    image: mamba4ka/savepasswords:gatewayService-latest
    restart: always
    environment:
      - LOGZIO_TOKEN=${LOGZIO_TOKEN}
      - VIRTUAL_HOST=api.savepasswords.dev
      - LETSENCRYPT_HOST=api.savepasswords.dev
      - LETSENCRYPT_EMAIL=statkovit@gmail.com
    networks:
      - back
      - reverse-proxy

  authorization-service:
    expose:
      - "8888"
    image: mamba4ka/savepasswords:authorizationService-latest
    restart: always
    environment:
      - KAFKA_CLIENT_USER=${KAFKA_CLIENT_USER}
      - KAFKA_CLIENT_PASSWORD=${KAFKA_CLIENT_PASSWORD}
      - KAFKA_PASSWORD=${KAFKA_CERTIFICATE_PASSWORD}
      - LOGZIO_TOKEN=${LOGZIO_TOKEN}
    networks:
      - back

  auth-redis:
    restart: always
    expose:
      - "6379"
    networks:
      - back

  auth-postgres:
    restart: always
    expose:
      - "5432"
    networks:
      - back

  personal-accounts-postgres:
    restart: always
    expose:
      - "5432"
    networks:
      - back

  personal-accounts-redis:
    restart: always
    expose:
      - "6379"
    networks:
      - back

  personal-accounts-service:
    restart: always
    expose:
      - "8890"
    image: mamba4ka/savepasswords:personalAccountsService-latest
    environment:
      - KAFKA_CLIENT_USER=${KAFKA_CLIENT_USER}
      - KAFKA_CLIENT_PASSWORD=${KAFKA_CLIENT_PASSWORD}
      - KAFKA_PASSWORD=${KAFKA_CERTIFICATE_PASSWORD}
      - LOGZIO_TOKEN=${LOGZIO_TOKEN}
    networks:
      - back

  email-redis:
    restart: always
    expose:
      - "6379"
    networks:
      - back

  email-service:
    restart: always
    expose:
      - "8891"
    image: mamba4ka/savepasswords:emailService-latest
    environment:
      - KAFKA_CLIENT_USER=${KAFKA_CLIENT_USER}
      - KAFKA_CLIENT_PASSWORD=${KAFKA_CLIENT_PASSWORD}
      - KAFKA_PASSWORD=${KAFKA_CERTIFICATE_PASSWORD}
      - LOGZIO_TOKEN=${LOGZIO_TOKEN}
    networks:
      - back


  zookeeper1:
    restart: always
    expose:
      - "2181"
    environment:
      - ZOO_ENABLE_AUTH=yes
      - ZOO_SERVER_USERS=${ZOOKEPEER_USER}
      - ZOO_SERVER_PASSWORDS=${ZOOKEPEER_PASSWORD}
    networks:
      - back

  kafka1:
    restart: always
    expose:
      - "9092"
    networks:
      - back
    environment:
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=SASL_SSL:SASL_SSL
      - KAFKA_CFG_LISTENERS=SASL_SSL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=SASL_SSL://kafka1:9092
      - KAFKA_ZOOKEEPER_USER=${ZOOKEPEER_USER}
      - KAFKA_ZOOKEEPER_PASSWORD=${ZOOKEPEER_PASSWORD}
      - KAFKA_INTER_BROKER_USER=${KAFKA_INTER_BROKER_USER}
      - KAFKA_INTER_BROKER_PASSWORD=${KAFKA_INTER_BROKER_PASSWORD}
      - KAFKA_BROKER_USER=${KAFKA_CLIENT_USER}
      - KAFKA_BROKER_PASSWORD=${KAFKA_CLIENT_PASSWORD}
      - KAFKA_CERTIFICATE_PASSWORD=${KAFKA_CERTIFICATE_PASSWORD}
    volumes:
      - ${KAFKA1_KEYSTORE_VOLUME}
      - ${KAFKA1_TRUSTORE_VOLUME}

  frontend:
    restart: always
    expose:
      - "80"
    image: mamba4ka/savepasswords:frontend-latest
    networks:
      - back
      - reverse-proxy
    environment:
      - VIRTUAL_HOST=savepasswords.dev
      - LETSENCRYPT_HOST=savepasswords.dev
      - LETSENCRYPT_EMAIL=statkovit@gmail.com

  nginx-proxy:
    restart: always
    image: jwilder/nginx-proxy:latest
    ports:
      - "80:80"
      - "443:443"
    networks:
      - reverse-proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /savepasswords/sslCerts:/etc/nginx/certs:ro
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy:true

  nginx-letsencrypt:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    networks:
      - reverse-proxy
    volumes_from:
      - nginx-proxy
    volumes:
      - /savepasswords/sslCerts:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
networks:
  reverse-proxy:
    external:
      name: reverse-proxy
  back:
    driver: bridge
